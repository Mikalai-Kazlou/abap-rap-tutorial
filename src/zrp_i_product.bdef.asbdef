managed;
strict ( 2 );
with draft;
extensible
{
  with validations on save;
  with determinations on modify;
  with determinations on save;
  with additional save;
}


define behavior for ZRP_I_PRODUCT alias Product
implementation in class zbp_rp_i_product unique
persistent table zrp_d_product
draft table zrp_x_product
lock master total etag ChangedOn
authorization master ( global, instance )
etag master LocalChangedOn
extensible
{
  association _ProductMarket { create; with draft; }

  field ( numbering : managed, readonly ) UUID;
  field ( readonly ) CreatedBy, CreatedOn, ChangedBy, ChangedOn;
  field ( features : instance ) ID, Name, ProductGroupID, Height, Depth, Width, SizeUOM, Price, PriceCurrency, TaxRate;

  determination SetInitialPhase on save { create; }

  validation ValidateProductID on save { field ID; }
  validation ValidateProductGroup on save { field ProductGroupID; }
  validation ValidateMandatoryFields on save { create; update; }

  create;
  update;
  delete;

  draft determine action Prepare extensible
  {
    validation ValidateProductID;
    validation ValidateProductGroup;
    validation ValidateMandatoryFields;

    validation ProductMarkets~ValidateMarketID;
    validation ProductMarkets~ValidateStartDate;
    validation ProductMarkets~ValidateEndDate;
    validation ProductMarkets~CheckDuplicates;

    validation MarketOrders~ValidateDeliveryDate;
  }

  draft action Edit;
  draft action Activate optimized;
  draft action Discard;
  draft action Resume;

  action CopyProduct parameter ZRP_A_IP_COPY_PRODUCT result [1] $self;
  action MoveToNextPhase result [1] $self;

  mapping for zrp_d_product corresponding extensible
    {
      UUID           = produuid;
      ID             = prodid;
      Name           = prodname;
      ProductGroupID = pgid;
      PhaseID        = phaseid;
      Height         = height;
      Depth          = depth;
      Width          = width;
      SizeUOM        = sizeuom;
      Price          = price;
      PriceCurrency  = pricecurrency;
      TaxRate        = taxrate;
      CreatedBy      = createdby;
      CreatedOn      = createdon;
      ChangedBy      = changedby;
      ChangedOn      = changedon;
      LocalChangedOn = localchangedon;
    }
}


define behavior for ZRP_I_PRODUCT_MARKET alias ProductMarkets
implementation in class zbp_rp_i_product_market unique
persistent table zrp_d_prod_mrkt
draft table zrp_x_prod_mrkt
lock dependent by _Product
authorization dependent by _Product
etag master LocalChangedOn
extensible
{
  association _Product { with draft; }
  association _MarketOrder { create ( features : instance ); with draft; }

  field ( numbering : managed, readonly ) ProductMarketUUID;
  field ( readonly ) ProductUUID, ISOCode, CreatedBy, CreatedOn, ChangedBy, ChangedOn;
  field ( mandatory ) MarketID, StartDate;

  determination SetISOCode on save { create; update; }

  validation ValidateMarketID on save { field MarketID; }
  validation ValidateStartDate on save { field StartDate; }
  validation ValidateEndDate on save { field EndDate; }
  validation CheckDuplicates on save { field MarketID; }

  update;
  delete;

  action ( features : instance ) AcceptMarket result [1] $self;
  action ( features : instance ) RejectMarket result [1] $self;

  mapping for zrp_d_prod_mrkt corresponding extensible
    {
      ProductUUID       = produuid;
      ProductMarketUUID = mrktuuid;
      MarketID          = mrktid;
      ISOCode           = isocode;
      Status            = status;
      StartDate         = startdate;
      EndDate           = enddate;
      CreatedBy         = createdby;
      CreatedOn         = createdon;
      ChangedBy         = changedby;
      ChangedOn         = changedon;
      LocalChangedOn    = localchangedon;
    }
}


define behavior for ZRP_I_MARKET_ORDER alias MarketOrders
implementation in class zbp_rp_i_market_order unique
persistent table zrp_d_mrkt_order
draft table zrp_x_mrkt_order
lock dependent by _Product
authorization dependent by _Product
etag master LocalChangedOn
extensible
{
  association _Product { with draft; }
  association _ProductMarket { with draft; }

  field ( numbering : managed, readonly ) OrderUUID;
  field ( readonly ) ProductUUID, ProductMarketUUID, CreatedBy, CreatedOn, ChangedBy, ChangedOn;
  field ( mandatory ) Quantity, DeliveryDate;

  determination SetOrderID on save { create; }
  determination SetCalendarYear on modify { field DeliveryDate; }
  determination CalculateTotalAmount on modify { field Quantity; }

  validation ValidateDeliveryDate on save { field DeliveryDate; }

  update;
  delete;

  internal action RecalculateTotalAmount;

  side effects
  {
    field Quantity affects field NetAmount, field GrossAmount, field AmountCurrency;
    field DeliveryDate affects field CalendarYear;
  }

  mapping for zrp_d_mrkt_order corresponding extensible
    {
      ProductUUID       = produuid;
      ProductMarketUUID = mrktuuid;
      OrderUUID         = orderuuid;
      OrderID           = orderid;
      Quantity          = quantity;
      CalendarYear      = calendaryear;
      DeliveryDate      = deliverydate;
      NetAmount         = netamount;
      GrossAmount       = grossamount;
      AmountCurrency    = amountcurr;
      CreatedBy         = createdby;
      CreatedOn         = createdon;
      ChangedBy         = changedby;
      ChangedOn         = changedon;
      LocalChangedOn    = localchangedon;
    }
}